PROGRAM A_RUCH
%STACKSIZE = 4000
%NOLOCKGROUP
%NOPAUSE=ERROR+COMMAND+TPENABLE
%ENVIRONMENT uif
%ENVIRONMENT sysdef
%ENVIRONMENT kclop
%ENVIRONMENT bynam
%ENVIRONMENT fdev
%ENVIRONMENT flbt
%ENVIRONMENT STRNG
%ENVIRONMENT TIM
%ENVIRONMENT REGOPE
%INCLUDE klevccdf
%INCLUDE klevkeys
%INCLUDE klevkmsk

CONST
	cc_success = 0 -- Success status
	cc_xyzwpr = 2 -- Position Register has an XYZWPR
	cc_jntpos = 9 -- Position Register has a JOINTPOS

VAR     --variables declaration with types
	xyz	: XYZWPR
	jpos : JOINTPOS
	file_var : FILE
	tmp_int	 : INTEGER
	tmp_str  : STRING[126]
	entry	 : INTEGER

	pos_type,
	num_axes,
	prog_index,
	i_val,
	status : INTEGER
	r_val :REAL
	r_flg :BOOLEAN

	loop1	 : BOOLEAN
	loop2	 : BOOLEAN
	cur_tim	: INTEGER
	ary_tmp :ARRAY[6] OF STRING[10]
	posext_data :XYZWPREXT

BEGIN
	WRITE(CHR(137),CHR(128)); -- Clear the TP USER menu screen
	FORCE_SPMENU(TP_PANEL,SPI_TPUSER,1) -- Force the TP USER menu to be visible
	
	-- Connect the tag
    WRITE('Program is started.',CR)

	---------------------------------------------------------------------------------------------
	WRITE('Getting Current Position',CR)
	xyz = CURPOS(0,0) -- Get the current position
	WRITE('Position = ',xyz, CR)
	jpos = xyz
	--xyz.x = xyz.x - 5
	--xyz.z = xyz.z + 5
	WRITE('Storing new position to PR[10]',CR)
	SET_JPOS_REG(10 , jpos, status)
	--WRITE('POSITION STATUS =', status, CR)
	IF (status = 0) THEN -- Verify SET_POS_REG is successful
		WRITE('Setting Integer Value to R[1]',CR)
		SET_INT_REG(1, 1, status) -- Set the value 1 (second val) into R[1]
	ENDIF
	
	-- START MOVEMENT PROGRAM
	WRITE('Starting program RUCH',CR)
	CALL_PROGLIN('RUCH',1, prog_index, FALSE) --Execute PROG_1.TP
	
	-- CHECK IF PROGRAM WAS EXECUTED PROPERLY--
	WRITE('Getting Value from R[2]',CR)
	GET_REG(2,r_flg, i_val, r_val, status) --Get R[2] value
	IF (status = cc_success) THEN --Verify GET_REG success
		IF (r_flg) THEN --REAL value in register
			WRITE('Got REAL value from R[2]',CR)
			IF (r_val <> 1.0) THEN --Verify value set
				WRITE ('PROG_1 failed to set R[2]',CR) -- by RUCH.tp
			ENDIF
		ELSE --Register contained an INTEGER
			WRITE('Got INTEGER value from R[2]',CR)
			IF (i_val <> 1) THEN --Verify value set by
				WRITE ('PROG_1 failed to set R[2]',CR) --PROG_1.TP
			ENDIF
		ENDIF
	ELSE --GET_REG was NOT successful
		WRITE('GET_REG Failed',CR,' Status = ',status,CR)
	ENDIF

	---------------------------------------------------------------------------------------------------

END A_RUCH

