PROGRAM A_String

%STACKSIZE = 4000
%NOLOCKGROUP
%NOPAUSE=ERROR+COMMAND+TPENABLE
%ENVIRONMENT uif
%ENVIRONMENT sysdef
%ENVIRONMENT kclop
%ENVIRONMENT bynam
%ENVIRONMENT fdev
%ENVIRONMENT flbt
%ENVIRONMENT STRNG
%ENVIRONMENT TIM
%ENVIRONMENT REGOPE --GET_REG
%INCLUDE klevccdf
%INCLUDE klevkeys
%INCLUDE klevkmsk

VAR     --variables declaration with types
	file_var : FILE         --do utworzenia pliku przesylu   
	tmp_str  : STRING[126]  --do wysylania stringa
	new_str : STRING[9]
    xyz :XYZWPR     --przechowuje pozycje
	entry,          --do ustawienia portu automatycznie
    tmp_int,        --do licznika w petli
    prg_indx,       --jesli chce wywolac program
	i_val,          --do przypisania wartosci z rejestru
	STATUS : INTEGER    --zmienna do statusow
	r_val :REAL     --do przypisania wartosci z rejestru
	r_flg :BOOLEAN  --flaga przypisywania wartosci z rejestru

	loop1,          --uzywane do petli
	loop2	 : BOOLEAN

ROUTINE ustaw_screen
BEGIN
    WRITE(CHR(137),CHR(128)); -- Clear the TP USER menu screen
	FORCE_SPMENU(TP_PANEL,SPI_TPUSER,1) -- Force the TP USER menu to be visible
END ustaw_screen

ROUTINE pos_string :STRING
VAR
    str_r: STRING[126]
    ary_r :ARRAY[6] OF STRING[10]
BEGIN
	xyz = CURPOS(0,0) --pobranie obecnej pozycji
	CNV_REAL_STR(xyz.x, 2, 3, ary_r[1])     --syntax(real input, length, num_digits, string target)
	CNV_REAL_STR(xyz.y, 2, 3, ary_r[2])
	CNV_REAL_STR(xyz.z, 2, 3, ary_r[3])
	CNV_REAL_STR(xyz.w, 2, 3, ary_r[4])
	CNV_REAL_STR(xyz.p, 2, 3, ary_r[5])
	CNV_REAL_STR(xyz.r, 2, 3, ary_r[6])
	str_r = ary_r[1] + ary_r[2] + ary_r[3] + ary_r[4] + ary_r[5] + ary_r[6] --sklejenie pozycji w stringa
    RETURN(str_r)   --zwrocenie wartosci
END pos_string

ROUTINE pos_new (x,y,z,w,p,r :REAL) :XYZWPR
BEGIN
	xyz.x=x
	xyz.y=y
	xyz.z=z
	xyz.w=w
	xyz.p=p
	xyz.r=r
	RETURN(xyz)
END pos_new

-------------------------GLOWNA PETLA PROGRAMU------------------------------------------
BEGIN
	ustaw_screen

	tmp_str = pos_string    --uzycie ROUTINE do pobrania obecnej lokalizacji i zrobienia jej na string
	WRITE ('Calosc: ', tmp_str ::126, CR)
	WRITE ('Skrocone: ', tmp_str ::2, CR)
	new_str= SUB_STR(tmp_str,2,1)
	WRITE('nowy: ',new_str,CR)
	IF new_str = '2' THEN 
		WRITE('WARUNEK SPELNIONY',CR)
	ELSE
		WRITE('NIESPELNIONY',CR)
	ENDIF


	WRITE('Pozycja:',xyz,CR)
	tmp_str = pos_string
	WRITE('String:',tmp_str,CR)
	new_str= SUB_STR(tmp_str,2,8)
	WRITE('Nowy:',new_strr,CR)
	new_str= SUB_STR(tmp_str,10,8)
	WRITE('Nowy:',new_strr,CR)
	new_str= SUB_STR(tmp_str,18,8)
	WRITE('Nowy:',new_strr,CR)
	new_str= SUB_STR(tmp_str,26,8)
	WRITE('Nowy:',new_strr,CR)
	new_str= SUB_STR(tmp_str,34,8)
	WRITE('Nowy:',new_strr,CR)
	new_str= SUB_STR(tmp_str,42,8)
	WRITE('Nowy:',new_strr,CR)
	new_str= SUB_STR(tmp_str,50,8)
	WRITE('Nowy:',new_strr,CR)

	xyz = pos_new(50,40,20.8,-170,-65.123,15)
	WRITE('Nowa pozycja:',xyz, CR)


END A_String

